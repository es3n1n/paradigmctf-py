name: Test

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  test:
    name: ${{ matrix.compose-file }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.13' ]
        compose-file: [ 'compose.yml' ]
    env:
      UV_CACHE_DIR: ~/.cache/uv
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ${{ env.UV_CACHE_DIR }}
        key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ matrix.python-version }}-

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Compose up (${{ matrix.compose-file }})
      run: docker compose -f ${{ matrix.compose-file }} up -d --build

    - name: Run tests
      run: uv run pytest
      if: ${{ !cancelled() && !failure() }}

    - name: Show compose logs on failure
      if: failure()
      run: docker compose -f ${{ matrix.compose-file }} logs --no-color -n 500

    - name: Compose down (${{ matrix.compose-file }})
      if: always()
      run: docker compose -f ${{ matrix.compose-file }} down --volumes --remove-orphans

    - name: Prune uv cache
      run: uv cache prune
